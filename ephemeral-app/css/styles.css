/* Import CSS reset */
@import url('/css/reset.css');
/* DO NOT import Pico CSS anymore */

/* --- Global Variables & Base Styles --- */
:root {
    /* Dark Theme Colors */
    --bg-color: #0f0f1a;
    --bg-secondary-color: #1a1a2e;
    --text-color: #e0e0e5;
    --text-muted-color: #a0a0b5;
    --heading-color: #ffffff;
    --primary-accent: #6a0dad; /* Vibrant Purple */
    --secondary-accent: #007bff; /* Vibrant Blue */
    --accent-gradient: linear-gradient(135deg, var(--primary-accent) 0%, var(--secondary-accent) 100%);
    --glass-bg: rgba(26, 26, 46, 0.6); /* Slightly more opaque glass for app */
    --glass-border: rgba(255, 255, 255, 0.1);
    --input-bg: rgba(255, 255, 255, 0.05);
    --input-border: rgba(255, 255, 255, 0.15);
    --input-focus-border: var(--secondary-accent);
    --danger-color: #dc3545; /* For potential errors */

    --font-family: 'Inter', sans-serif;
    --heading-font-weight: 700;
    --base-font-weight: 400;
    --medium-font-weight: 500;

    --border-radius: 10px; /* Consistent radius */
    --section-padding: 80px 0; /* Used more on landing */
    --container-max-width: 550px; /* Max width for the main form card */
    --transition-speed: 0.3s ease;
    --blur-intensity: 10px; /* Glass blur */
}

html {
    scroll-behavior: smooth;
}

body {
    font-family: var(--font-family);
    font-weight: var(--base-font-weight);
    line-height: 1.6;
    color: var(--text-color);
    background-color: var(--bg-color);
    background-image: linear-gradient(180deg, var(--bg-color) 0%, #141424 100%);
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    overflow-x: hidden;
    position: relative;
    min-height: 100vh;
    display: flex;
    flex-direction: column; /* For footer positioning */
}

/* --- Abstract Background Shapes --- */
/* Identical to landing page shapes */
.background-shapes {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    z-index: -1;
    pointer-events: none;
}
.shape {
    position: absolute;
    border-radius: 50%;
    background: linear-gradient(135deg, rgba(106, 13, 173, 0.1) 0%, rgba(0, 123, 255, 0.1) 100%);
    filter: blur(100px);
    opacity: 0.5;
    animation: drift 25s infinite alternate ease-in-out;
}
.shape-1 {
    width: 450px;
    height: 450px;
    top: 5%;
    left: 10%;
    animation-duration: 28s;
}
.shape-2 {
    width: 550px;
    height: 550px;
    top: 55%;
    right: 5%;
    animation-duration: 32s;
    animation-delay: -5s;
    background: linear-gradient(135deg, rgba(0, 123, 255, 0.08) 0%, rgba(106, 13, 173, 0.08) 100%);
}
.shape-3 {
    width: 350px;
    height: 350px;
    bottom: 10%;
    left: 35%;
    filter: blur(120px);
    animation-duration: 22s;
    animation-delay: -10s;
    opacity: 0.4;
}
@keyframes drift {
    0% {
        transform: translate(0, 0) rotate(0deg) scale(1);
    }
    50% {
        transform: translate(30px, 50px) rotate(180deg) scale(1.1);
    }
    100% {
        transform: translate(-15px, -25px) rotate(360deg) scale(1);
    }
}

h1,
h2,
h3,
h4,
h5,
h6 {
    font-weight: var(--heading-font-weight);
    line-height: 1.3;
    color: var(--heading-color);
    margin: 0 0 0.75em 0;
}
h1 {
    font-size: 2rem;
}
h3 {
    font-size: 1.4rem;
} /* Used in modal */
h4 {
    font-size: 1.2rem;
    font-weight: var(--medium-font-weight);
} /* Form title */

p {
    margin-bottom: 1rem;
    color: var(--text-muted-color);
}
a {
    color: var(--secondary-accent);
    text-decoration: none;
    transition: color var(--transition-speed);
}
a:hover {
    color: var(--heading-color);
}
ul {
    list-style: none;
    padding: 0;
}

/* --- Layout --- */
.app-header {
    text-align: center;
    padding: 30px 20px 10px;
}
.app-header h1 a {
    font-size: 1.8rem;
    font-weight: var(--heading-font-weight);
    color: var(--heading-color);
    text-decoration: none;
    text-transform: lowercase; /* Keep original style */
    letter-spacing: 1px;
}
.app-header h1 a:hover {
    color: var(--secondary-accent);
}
.app-header p {
    font-size: 0.95rem;
    color: var(--text-muted-color);
    margin-bottom: 0;
}

.app-main {
    width: 100%;
    max-width: var(--container-max-width);
    margin: 20px auto; /* Center the main card */
    padding: 35px 40px; /* Generous padding */
    flex-grow: 1; /* Allow main to grow */
}

.app-footer {
    text-align: center;
    padding: 20px;
    font-size: 0.85rem;
    color: var(--text-muted-color);
    margin-top: auto; /* Push footer down */
}
.app-footer p {
    margin-bottom: 0;
}

/* --- Glassmorphism Effect --- */
.glass-card,
.glass-effect {
    background: var(--glass-bg);
    backdrop-filter: blur(var(--blur-intensity));
    -webkit-backdrop-filter: blur(var(--blur-intensity));
    border: 1px solid var(--glass-border);
    border-radius: var(--border-radius);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);
}

/* --- Form Styles --- */
.note-form {
    display: flex;
    flex-direction: column;
    gap: 25px; /* Space between form elements/sections */
}
.form-title {
    text-align: center;
    color: var(--heading-color);
    margin-bottom: 10px; /* Adjust spacing */
}
.form-section {
    border-top: 1px solid var(--glass-border);
    padding-top: 25px;
}
.section-label {
    font-weight: var(--medium-font-weight);
    color: var(--text-color);
    margin-bottom: 15px;
    font-size: 1rem;
}
.form-group {
    margin-bottom: 10px; /* Space within groups like password fields */
}
.sr-only {
    /* Screen reader only */
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
}

/* Input Fields (Textarea, Text, Password, Datetime) */
textarea,
input[type='text'],
input[type='password'],
input[type='datetime-local'] {
    width: 100%;
    padding: 12px 15px;
    background-color: var(--input-bg);
    border: 1px solid var(--input-border);
    border-radius: calc(var(--border-radius) - 4px); /* Slightly smaller radius */
    color: var(--text-color);
    font-size: 1rem;
    transition: border-color var(--transition-speed), box-shadow var(--transition-speed);
}
textarea:focus,
input[type='text']:focus,
input[type='password']:focus,
input[type='datetime-local']:focus {
    outline: none;
    border-color: var(--input-focus-border);
    box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.25); /* Focus glow */
}
textarea {
    min-height: 150px; /* Keep original height */
    resize: vertical;
}
input::placeholder,
textarea::placeholder {
    color: var(--text-muted-color);
    opacity: 0.8;
}
/* Style datetime-local picker indicator */
input[type='datetime-local']::-webkit-calendar-picker-indicator {
    filter: invert(70%) sepia(50%) saturate(500%) hue-rotate(180deg); /* Try to style the icon */
    cursor: pointer;
}

/* Radio Buttons & Checkboxes */
.radio-group,
.checkbox-group {
    display: flex;
    flex-direction: column;
    gap: 12px;
}
.radio-group label,
.checkbox-group label {
    display: inline-flex; /* Align input and span */
    align-items: center;
    cursor: pointer;
    color: var(--text-muted-color);
    transition: color var(--transition-speed);
    font-size: 0.95rem;
}
.radio-group label:hover,
.checkbox-group label:hover {
    color: var(--text-color);
}
/* Custom appearance would be better, but styling defaults for now */
input[type='radio'],
input[type='checkbox'] {
    margin-right: 10px;
    accent-color: var(--primary-accent); /* Modern way to color */
    width: 1em;
    height: 1em;
    cursor: pointer;
}
input[type='radio'] {
    border-radius: 50%;
}

/* Hide/Show Logic */
.hidden {
    display: none !important;
} /* Use important to override potential conflicts */

/* Password confirmation specific spacing */
.password-fields .form-group:last-child {
    margin-bottom: 0;
}

/* Buttons */
.cta-button {
    display: inline-flex; /* Align icon/text */
    align-items: center;
    justify-content: center;
    padding: 12px 28px;
    border-radius: var(--border-radius);
    font-weight: var(--medium-font-weight);
    cursor: pointer;
    transition: all var(--transition-speed);
    border: none;
    font-size: 1rem;
    letter-spacing: 0.5px;
    gap: 8px; /* Space between text and arrow */
}
.cta-button .arrow {
    transition: transform 0.2s ease-out;
    display: inline-block;
}
.cta-button:hover .arrow {
    transform: translateX(4px);
}

.cta-button.primary {
    background: var(--accent-gradient);
    color: var(--heading-color);
    box-shadow: 0 4px 15px rgba(106, 13, 173, 0.2);
    width: 100%; /* Make main action full width */
    margin-top: 10px; /* Space above button */
}
.cta-button.primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(0, 123, 255, 0.3);
}

.cta-button.secondary {
    background-color: var(--input-bg);
    color: var(--text-muted-color);
    border: 1px solid var(--input-border);
}
.cta-button.secondary:hover {
    background-color: var(--glass-border);
    border-color: var(--text-muted-color);
    color: var(--text-color);
}
.cta-button.small {
    padding: 8px 15px;
    font-size: 0.9rem;
}
.cta-button svg {
    /* Style for copy icon */
    width: 1em;
    height: 1em;
    fill: currentColor;
}

/* --- Modal Styles --- */
.modal-backdrop {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.8); /* Darker backdrop */
    backdrop-filter: blur(5px); /* Blur background */
    z-index: 1000;
}

.modal-content {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 90%;
    max-width: 500px; /* Slightly smaller max-width */
    padding: 30px;
    z-index: 1001;
    text-align: center;
}
.modal-content h3 {
    color: var(--heading-color);
    margin-bottom: 15px;
}
.modal-instruction {
    font-size: 0.95rem;
    margin-bottom: 20px;
    color: var(--text-muted-color);
}

.link-container {
    display: flex;
    gap: 10px;
    margin-bottom: 25px;
    align-items: center;
}
#output-link-input {
    /* Style the input holding the link */
    flex-grow: 1; /* Take available space */
    background-color: rgba(0, 0, 0, 0.2); /* Darker input */
    border-color: var(--glass-border);
    color: var(--text-color);
    padding: 10px 12px;
    font-size: 0.9rem;
    overflow-x: hidden; /* Hide overflow */
    text-overflow: ellipsis; /* Show ... if too long */
}
#output-link-input:focus {
    box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.2);
}

#copy-link {
    flex-shrink: 0; /* Prevent button from shrinking */
}

.modal-content .close-btn {
    display: block; /* Make close button full width */
    width: 100%;
    margin-top: 10px;
}

/* --- Responsive Adjustments --- */
@media (max-width: 600px) {
    :root {
        --container-max-width: 90%;
        --blur-intensity: 8px;
    }
    .app-main {
        padding: 25px 20px;
    }
    h1 {
        font-size: 1.8rem;
    }
    .cta-button {
        padding: 12px 20px;
        font-size: 0.95rem;
    }
    .cta-button.small {
        padding: 8px 12px;
        font-size: 0.85rem;
    }
    .modal-content {
        padding: 25px;
    }
    #output-link-input {
        font-size: 0.85rem;
    }
    .shape {
        display: none;
    } /* Hide shapes on small screens for performance/simplicity */
}

/* --- Note view specific styles (from original, adapted) --- */
.note {
    /* Class assumed for displaying the note content on view page */
    text-align: left; /* Usually better for reading */
    white-space: pre-wrap;
    padding: 20px;
    background-color: var(--input-bg);
    border-radius: var(--border-radius);
    border: 1px solid var(--input-border);
    color: var(--text-color);
    font-family: monospace; /* Often good for notes */
    margin: 20px auto;
    max-width: 700px;
}

.views {
    /* Class assumed for view count */
    text-align: center;
    margin-bottom: 10px;
    font-size: 0.9rem;
    color: var(--text-muted-color);
}

/* Style for the main container on the note view page */
.note-main {
    border: 1px solid var(--secondary-accent); /* Use accent color border */
    /* Inherits glass-card if applied */
}

/* --- Custom Radio Buttons & Checkboxes --- */

/* Hide the default radio/checkbox input */
.radio-group input[type='radio'],
.checkbox-group input[type='checkbox'] {
    appearance: none; /* Modern way to hide */
    -webkit-appearance: none;
    -moz-appearance: none;
    position: absolute; /* Take out of layout flow */
    opacity: 0;
    width: 0;
    height: 0;
    margin: 0; /* Reset any margin */
}

/* Style the label to act as the container */
.radio-group label,
.checkbox-group label {
    position: relative; /* Needed for positioning pseudo-elements */
    padding-left: 30px; /* Space for the custom control */
    cursor: pointer;
    display: inline-flex; /* Align baseline */
    align-items: center;
    min-height: 20px; /* Ensure consistent height */
    line-height: 1.4; /* Adjust line height */
    user-select: none; /* Prevent text selection on click */
    transition: color var(--transition-speed);
    color: var(--text-muted-color); /* Default color */
}

.radio-group label:hover,
.checkbox-group label:hover {
    color: var(--text-color); /* Hover color */
}

/* Create the custom radio/checkbox box using ::before */
.radio-group label span::before,
.checkbox-group label span::before {
    content: '';
    position: absolute;
    left: 0;
    top: 50%;
    transform: translateY(-50%); /* Center vertically */
    width: 18px;
    height: 18px;
    border: 1px solid var(--input-border);
    background-color: var(--input-bg);
    transition: background-color var(--transition-speed), border-color var(--transition-speed);
    box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1); /* Subtle inner shadow */
}

/* Specific style for radio button shape */
.radio-group label span::before {
    border-radius: 50%;
}

/* Specific style for checkbox shape */
.checkbox-group label span::before {
    border-radius: 3px; /* Slightly rounded square */
}

/* Style the checked state - Radio Button Dot */
.radio-group input[type='radio']:checked + span::before {
    border-color: var(--primary-accent); /* Use accent color for border */
    background-color: var(--input-bg); /* Keep background consistent */
}
.radio-group input[type='radio']:checked + span::after {
    /* The inner dot */
    content: '';
    position: absolute;
    left: 4px; /* Position inside the outer circle */
    top: 50%;
    transform: translateY(-50%);
    width: 10px; /* Size of the dot */
    height: 10px;
    border-radius: 50%;
    background-color: var(--primary-accent); /* Accent color */
    transition: background-color var(--transition-speed);
}

/* Style the checked state - Checkbox Checkmark */
.checkbox-group input[type='checkbox']:checked + span::before {
    background-color: var(--primary-accent); /* Fill with accent color */
    border-color: var(--primary-accent);
}
.checkbox-group input[type='checkbox']:checked + span::after {
    /* The checkmark */
    content: '';
    position: absolute;
    left: 6px;
    top: 3px; /* Fine-tune position */
    width: 5px;
    height: 10px;
    border: solid var(--heading-color); /* White checkmark */
    border-width: 0 2px 2px 0; /* Create checkmark shape */
    transform: rotate(45deg);
}

/* Style the focus state (accessibility) */
.radio-group input[type='radio']:focus + span::before,
.checkbox-group input[type='checkbox']:focus + span::before {
    outline: none;
    box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.3); /* Focus ring similar to inputs */
    border-color: var(--input-focus-border); /* Highlight border on focus */
}

/* Disabled state (optional - if you add disabled attribute) */
.radio-group input[type='radio']:disabled + span,
.checkbox-group input[type='checkbox']:disabled + span {
    color: rgba(160, 160, 181, 0.5); /* Faded text color */
    cursor: not-allowed;
}
.radio-group input[type='radio']:disabled + span::before,
.checkbox-group input[type='checkbox']:disabled + span::before {
    background-color: rgba(255, 255, 255, 0.02);
    border-color: rgba(255, 255, 255, 0.08);
    cursor: not-allowed;
}
.radio-group input[type='radio']:disabled:checked + span::after,
.checkbox-group input[type='checkbox']:disabled:checked + span::after {
    opacity: 0.4; /* Fade the check/dot */
}

#expiry,
#passwords {
    margin-top: 15px;
}

/* Remove default accent-color rule */
/* Find this rule in your existing CSS and remove it: */
/*
input[type="radio"], input[type="checkbox"] {
    margin-right: 10px;
    accent-color: var(--primary-accent); /* Modern way to color */ /* <-- REMOVE THIS LINE */
/* width: 1em;
    height: 1em;
    cursor: pointer;
}
*/
/* --- End of Custom Radio/Checkbox Styles --- */
